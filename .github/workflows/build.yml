name: Build the binaries
on:
  workflow_call:
    inputs:
      target:
        required: true
        type: string
      os:
        required: true
        type: string
jobs:
  reusable-build:
    name: Build
    runs-on: ${{ inputs.os }}
    env:
      CARGO_TARGET_DIR: target
      LEPTOS_BIN_TARGET_TRIPLE: ${{ inputs.target }}
      LEPTOS_TAILWIND_VERSION: v3.4.17
      LEPTOS_SASS_VERSION: 1.71.0
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Initialize workflow variables
        id: vars
        shell: bash
        run: |
          TARGET=${{ inputs.target }}

          case $TARGET in
            *-pc-windows-*) BINARY="file-share.exe" ;;
            *)              BINARY="file-share" ;;
          esac;

          echo "BINARY=${BINARY}"
          echo "BINARY=${BINARY}" >> "$GITHUB_ENV"


          RELEASE="target/$TARGET/release"

          echo "RELEASE=${RELEASE}"
          echo "RELEASE=${RELEASE}" >> "$GITHUB_ENV"


          case $TARGET in
            x86_64-*) CROSS="false" ;;
            *)        CROSS="true" ;;
          esac;

          echo "CROSS=${CROSS}"
          echo "CROSS=${CROSS}" >> "$GITHUB_ENV"
      - name: Install gcc and linker for other archs
        if: contains(inputs.target, 'linux')
        run: |
          sudo apt-get -y update
          case ${{ inputs.target }} in
            aarch64-*linux*) sudo apt-get -y install gcc-aarch64-linux-gnu ;;
            x86_64-*linux*)  sudo apt-get -y install mold ;;
          esac;
      - name: Install NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          check-latest: true
      - name: Install npm dependencies
        run: npm install --no-audit --lockfile-only
      - name: Install rust tooling
        uses: moonrepo/setup-rust@v1
        with:
          bins: cargo-leptos, cross
          targets: "${{ inputs.target }},wasm32-unknown-unknown"
          profile: minimal
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Compile
        if: ${{ env.CROSS == 'false' }}
        run: cargo leptos build --release
      - name: Compile with cross
        if: ${{ env.CROSS == 'true' }}
        run: cargo leptos build --release
        env:
          LEPTOS_BIN_CARGO_COMMAND: cross
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.target }}-${{ env.BINARY }}
          path: ${{ env.RELEASE }}/${{ env.BINARY }}
